#!/bin/bash
# pentest_zshrc functions

# Ascii colors
#
BOLD="\e[1m"
ITAL="\e[3m"
UNDER="\e[4m"
REVERSE="\e[7m"
STRIKE="\e[9m"
FGC="\e[38;5;"
BGC="\e[48;5;"
NC="\e[0m"

echo -ne "Loading functions . . ."
function parseconfig(){
	## checks configuration of following form:
	## DATE	<string>
	## NAME <string>
	## TARGET <dotted decimal IPv4>
	## LHOST <dotted decimal IPv4>
	configfiletocheck=$1
	if [[ -f $configfiletocheck ]]; then
		local __dtg_fromconfigfile=$(cat $configfiletocheck | grep DATE | awk '{print $2}')
		local __targethostname_fromconfigfile=$(cat $configfiletocheck | grep NAME | awk '{print $2}')
		local __targetipv4_fromconfigfile=$(cat $configfiletocheck | grep TARGET | awk '{print $2}')
		local __localhostipv4_fromconfigfile=$(cat $configfiletocheck | grep LHOST | awk '{print $2}')
		echo -ne "DATE\t$__dtg_fromconfigfile\nNAME\t$__localhostipv4_fromconfigfile\nTARGET\t$__targetipv4_fromconfigfile\nLHOST\t$__localhostipv4_fromconfigfile\n"
		return 0
	else
		echo -ne "Configuration file $configfiletocheck does not exist.\n"
		return 1
	fi
}


# use following sed command to escape symbols (backticks, double quotes, and dollar signs)
# sed -e 's/`/\\`/g' -e 's/"/\\"/g' -e 's/\$/\\\$/g'
function cas() {
	if [[ -z "$QVRUQUNLIEZMQUc" ]]; then
	  NOJOYCOLORARRAY=("15m" "252m" "248m" "244m" "240m" "236m")
	  index=0
	  for color in ${NOJOYCOLORARRAY[@]}; do
	    eval "FGNJC$index=\"${FGC}${color}\""
	    ((index=index+1))
	  done

	  printf """
	  ${FGNJC0}:::.    :::.    ...             ....::::::   ...  .-:.     ::-.
	  ${FGNJC1}\`;;;;,  \`;;; .;;;;;;;.       ;;;;;;;;;\`\`\`\`.;;;;;;;.';;.   ;;;;'
	  ${FGNJC2}  [[[[[. '[[,[[     \[[,     ''\`  \`[[.   ,[[     \[[,'[[,[[['  
	  ${FGNJC3}  \$\$\$ \"Y\$c\$\$\$\$\$,     \$\$\$    ,,,    \`\$\$   \$\$\$,     \$\$\$  c\$\$\"    
	  ${FGNJC4}  888    Y88\"888,_ _,88P    888boood88   \"888,_ _,88P,8P\"\`     
	  ${FGNJC5}  MMM     YM  \"YMMMMMP\"     \"MMMMMMMM\"     \"YMMMMMP\"mM\"        ${NC}
	  """		
		return 1
	elif [[ "$QVRUQUNLIEZMQUc" ]]; then
		if [ $(printenv QVRUQUNLIEZMQUc) -eq 1 ]; then
		  TARGETLOCKCOLORARRAY=("52m" "88m" "124m" "160m" "1m")
		  index=0
		  for color in ${TARGETLOCKCOLORARRAY[@]}; do
		    eval "FGTLC$index=\"${FGC}${color}\""
		    ((index=index+1))
		  done

		  printf """
		  ${FGTLC0}:::::::::::::::.    :::::::..    .,-:::::/ .,::::::::::::::::::
		  ${FGTLC1};;;;;;;;'''';;\`;;   ;;;;\`\`;;;; ,;;-'\`\`\`\`'  ;;;;'''';;;;;;;;''''
		  ${FGTLC2}     [[    ,[[ '[[,  [[[,/[[[' [[[   [[[[[[/[[cccc      [[     
		  ${FGTLC3}     \$\$   c\$\$\$cc\$\$\$c \$\$\$\$\$\$c   \"\$\$c.    \"\$\$ \$\$\"\"\"\"      \$\$     
		  ${FGTLC4}     88,   888   888,888b \"88bo,\`Y8bo,,,o88o888oo,__    88,    
		  ${FGTLC4}     MMM   YMM   \"\"\` MMMM   \"W\"   \`'YMUP\"YMM\"\"\"\"YUMMM   MMM    
		  ${FGTLC4} :::         ...       .,-:::::  :::  .   .,:::::::::::::-.    
		  ${FGTLC4} ;;;      .;;;;;;;.  ,;;;'\`\`\`\`'  ;;; .;;,.;;;;'''' ;;,   \`';,  
		  ${FGTLC3} [[[     ,[[     \[[,[[[         [[[[[/'   [[cccc  \`[[     [[  
		  ${FGTLC2} \$\$'     \$\$\$,     \$\$\$\$\$\$        _\$\$\$\$,     \$\$\"\"\"\"   \$\$,    \$\$  
		  ${FGTLC1}o88oo,.__\"888,_ _,88P\`88bo,__,o,\"888\"88o,  888oo,__ 888_,o8P'  
		  ${FGTLC0}\"\"\"\"YUMMM  \"YMMMMMP\"   \"YUMMMMMP\"MMM \"MMP\" \"\"\"\"YUMMMMMMMP\"\`    ${NC}
		  """			
			echo -ne "TARGET=$TARGET\t\t\tLHOST=$LHOST\n"
			return 0
		else
			echo -ne "Attack Flag is $QVRUQUNLIEZMQUc.\nExiting...\n"
			return 1
		fi
	else
		echo -ne "Attack Flag is $QVRUQUNLIEZMQUc.\nExiting...\n"
		return 1
	fi
}

function ddtohex() {
	local xoct_one=$(printf "%x" $(echo $1 | cut -d "." -f 1))
	local xoct_two=$(printf "%x" $(echo $1 | cut -d "." -f 2))
	local xoct_three=$(printf "%x" $(echo $1 | cut -d "." -f 3))
	local xoct_four=$(printf "%x" $(echo $1 | cut -d "." -f 4))
	local xip="${xoct_one}${xoct_two}${xoct_three}${xoct_four}"
	echo -ne "${xip}"
}
echo -ne " done.\n"