#
# KFD penetration testing zshrc template
#
# depends on grepcidr,figlet,boxes,lolcat

# Stage user-defined variables
__vpniface=tun0
__targethostname=legacy.htb
__targetipv4=10.129.1.111
__localhostipv4=10.10.17.50

# Check to see if environment is clean
# Attack flag string value comes from `echo -ne "ATTACK FLAG" | base64`
echo -ne "Attack flag "
if [[ -z "$QVRUQUNLIEZMQUc" ]]; then
	echo -ne "is down.  "
	# Environment is clean, load user-defined variables from staging
	vpniface=$__vpniface
	targethostname=$__targethostname
	targetipv4=$__targetipv4
	localhostipv4=$__localhostipv4
elif [[ "$QVRUQUNLIEZMQUc" ]]; then
	echo -ne "exists and"
	if [ $(printenv QVRUQUNLIEZMQUc) -eq 1 ]; then
		echo -ne " is already up!\n"
		# Environment is not clean
		echo -ne "Environment variables:\t\tTARGETIP\t\tLHOST\nUser-Defined:\t\t\t$__targetipv4\t\t$__localhostipv4\nCurrent:\t\t\t$TARGET\t\t$LHOST"
		return 1
	else
		echo -ne "Attack Flag is $QVRUQUNLIEZMQUc.\nExiting...\n"
		return 1
	fi
else
	echo -ne "Attack Flag is $QVRUQUNLIEZMQUc.\nExiting...\n"
	exit 1
fi

echo -ne "Setting up environment:\n"
# Check if correct VPN interface is being used
echo -ne "Checking for presence of user-specified vpn interface $vpniface . . . "
iface=$(ip link | grep -v 'lo\|eth0\|link' | awk '{print $2}' | cut -d ":" -f 1)
if [[ $iface == $vpniface ]]; then
	echo -ne " found $iface.\n"
	vpnlocalipv4=$(ip addr show $vpniface | grep -w inet | awk '{print $2}' | cut -d "/" -f 1)
else
	echo "VPN interface variable vpniface is set to $vpniface but detected interface is $iface."
	echo "Exiting..."
	exit 1
fi

# Export environment variables
echo -ne "Exporting environment variables . . ."
# Make sure there's a route to target using vpn interface
vpncidr=$(ip route | awk -v awkvar="$vpniface" '$0 ~ awkvar && /via/ {print $1}' | sed -z 's/\n/,/g;s/,$/\n/')
grepcidr $vpncidr <<< $targetipv4 > /dev/null
if [ $? -eq 0 ]; then
	echo -ne " TARGET=$targetipv4 . . ."
	export TARGET=$targetipv4
else
	echo "Target IP $targetipv4 is missing from vpn interface $vpniface subnets $vpncidr."
	echo "Exiting..."
	exit 1
fi

# Make sure that localhost IP is using vpn interface
if [[ $localhostipv4 == $vpnlocalipv4 ]]; then
	echo -ne " LHOST=$vpnlocalipv4 . . ."
	export LHOST=$vpnlocalipv4
else
	echo "Localhost IP variable localhostipv4 is set to $localhostipv4 but vpn local address is $vpnlocalipv4."
	echo "Exiting..."
	exit 1
fi

echo -ne " done.\n"

# Raise attack flag
echo -ne "Raising attack flag . . ."
export QVRUQUNLIEZMQUc=1
echo -ne " done.\n"

# Aliases
echo -ne "Setting aliases . . ."
alias autorecon="sudo env "PATH=$PATH" autorecon"
echo -ne " done.\n"

# Functions
echo -ne "Loading functions . . ."
function cas() {
	if [[ -z "$QVRUQUNLIEZMQUc" ]]; then
		figlet NO TARGET | sed 's/ *$//' | boxes -d stone | lolcat -S 35
		return 1
	elif [[ "$QVRUQUNLIEZMQUc" ]]; then
		if [ $(printenv QVRUQUNLIEZMQUc) -eq 1 ]; then
			figlet $targethostname | sed 's/ *$//' | boxes -d stone | lolcat -S 1
			echo -ne "TARGET=$TARGET\t\tLHOST=$LHOST\n"
			return 0
		else
			echo -ne "Attack Flag is $QVRUQUNLIEZMQUc.\nExiting...\n"
			return 1
		fi
	else
		echo -ne "Attack Flag is $QVRUQUNLIEZMQUc.\nExiting...\n"
		return 1
	fi
}
echo -ne " done.\n"

# Logging
DTG=$(TZ='America/Denver' date +"%Y%b%d_%H%M%S%Z")
echo -ne "Touching timestamped configuration /tmp/QVRUQUNLIEZMQUc-$DTG . . ."
touch /tmp/QVRUQUNLIEZMQUc-$DTG
echo -ne " done. Copying environment variables into timestamped configuration . . ."
echo -ne "NAME\t$targethostname\n" > /tmp/QVRUQUNLIEZMQUc-$DTG && echo -ne "TARGET\t$TARGET\n" >> /tmp/QVRUQUNLIEZMQUc-$DTG && echo -ne "LHOST\t$LHOST\n" >> /tmp/QVRUQUNLIEZMQUc-$DTG
echo -ne " done.\n\nHappy hacking!\n"
